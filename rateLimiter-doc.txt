Design an API rate limiter — 
An API rate limiter is a tool that monitors the number of api requests per a window time a service agrees to allow.
If the api request count exceeds the number agreed by the service owner and the user (in a decided window time),
the rate limiter blocks all the excess calls(say by throwing exceptions).
The user can be a human or any other service(ex: in a micro service based architecture)

Why do we need API rate limiting?
Rate Limiting helps to protect services against abusive behaviors targeting the application layer
like Denial-of-service (DOS) attacks, brute-force password attempts, brute-force credit card transactions, etc.
These attacks are usually a barrage of HTTP/S requests which may look like they are coming from real users,
but are typically generated by machines (or bots). As a result, these attacks are often harder to detect and
can more easily bring down a service, application, or an API.Below are the some useful advantages of API Rate Limiters :
  1) Stop System Abuse : A misbehaving (or malicious script) could be hogging resources, or the API systems could be
     struggling and they need to cut down the rate limit for “lower priority” traffic.
  2) Security
  3) Improve user experience with less traffic
  4) Prevent system from being overloaded

Requirement and Design Decisions
Functional Requirement :
  * System should able to limit the number of API calls in a given window time.
  * System should work properly and through exceptions/error message if exceed the define limit.

Non Functional Requirement :
  * Response time should very fast.
  * The amount of data that is stored should be minimum.
  * Request data should be saved atomically and be persistent.
  * Be able to live in a distributed environment.
